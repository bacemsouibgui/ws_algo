PROCEDURE first-and-last-position(tab : ARRAY_OF FLOAT, x: FLOAT, var pos1, pos2: INTEGER)

VAR
    i,j: INTEGER;
    
BEGIN
    
    i:=0;
    j:=tab.length-1;
    pos1:= -1;
    pos2:= -1;

    WHILE (i<=j AND pos1=-1, po2:=-1) DO
        
        IF (tab[j]=x) THEN
            
            pos2:= j;
            ELSE
        j:= j-1;
        END_IF

    IF (tab[i]=x) THEN
        
        pos1:= 1;
        ELSE
        i:= i+1;
    END_IF
    END_WHILE
END

// if array is sorted  then the elements if exists are near each other
PROCEDURE first_and_last_positions(tab: ARRAY_OF FLOAT, x: FLOAT, var pos1, pos2: INTEGER)
VAR
    i,j: INTEGER;
BEGIN
    
    i:=0;
    pos1:= -1;
    pos2:= -1;

    WHILE (i<tab.length) DO
        IF (tab[i]=x) THEN
            
            pos1:=i;
            j:=i;

        WHILE (tab[j]=x AND j< tab.length) DO
            
            j=j+1;
        END_WHILE

        pos2:= j-1;

        ELSE
        i:= i+1;
        END_IF
        
    END_WHILE
END